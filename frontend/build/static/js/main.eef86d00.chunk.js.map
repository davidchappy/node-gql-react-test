{"version":3,"sources":["graphql/hello.js","logo.svg","App.js","reportWebVitals.js","index.js"],"names":["HELLO_QUERY","gql","App","useQuery","data","loading","error","className","src","logo","alt","target","rel","hello","say","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","StrictMode","ApolloProvider","document","getElementById"],"mappings":"mSAEaA,EAAcC,YAAH,6FCFT,MAA0B,iC,OCmC1BC,EA9BH,WACV,MAAiCC,YAASH,GAAlCI,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,MASvB,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,sCACO,8CADP,0BAGA,mBACEH,UAAU,WAEVI,OAAO,SACPC,IAAI,sBAJN,SAbAN,EAAa,kBAAN,OAAyBA,GAChCD,EAAgB,aAEbD,EAAKS,MAAMC,YCAPC,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,QCKRQ,EAAS,IAAIC,IAAa,CAC9BC,IAJI,2DAKJC,MAAO,IAAIC,MAGbC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAA,EAAD,CAAgBR,OAAQA,EAAxB,SACE,cAAC,EAAD,QAGJS,SAASC,eAAe,SAM1BnB,M","file":"static/js/main.eef86d00.chunk.js","sourcesContent":["import { gql } from \"@apollo/client\"\n\nexport const HELLO_QUERY = gql`\n  query Hello {\n    hello {\n      say\n      sing\n    }\n  }\n`\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { useQuery } from \"@apollo/client\"\nimport \"./App.css\"\nimport { HELLO_QUERY } from \"./graphql/hello\"\nimport logo from \"./logo.svg\"\n\nconst App = () => {\n  const { data, loading, error } = useQuery(HELLO_QUERY)\n\n  const getContent = () => {\n    if (error) return `GraphQL Error: ${error}`\n    if (loading) return \"Loading...\"\n\n    return data.hello.say\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          // href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          {getContent()}\n        </a>\n      </header>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ApolloClient, ApolloProvider, InMemoryCache } from \"@apollo/client\"\nimport React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport \"./index.css\"\nimport reportWebVitals from \"./reportWebVitals\"\n\nconst gqlEndpoint =\n  process.env.NODE_ENV === \"production\"\n    ? \"https://dac-node-gql-test-backend.herokuapp.com/graphql/\"\n    : \"http://localhost:8000/graphql/\"\n\nconst client = new ApolloClient({\n  uri: gqlEndpoint,\n  cache: new InMemoryCache()\n})\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}